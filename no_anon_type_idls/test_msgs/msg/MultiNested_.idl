// generated from rosidl_generator_dds_idl/resource/idl.idl.em
// with input from test_msgs:msg/MultiNested.idl
// generated code does not contain a copyright notice
#include "test_msgs/msg/dds_opendds/Arrays_.idl"
#include "test_msgs/msg/dds_opendds/BoundedSequences_.idl"
#include "test_msgs/msg/dds_opendds/UnboundedSequences_.idl"

#ifndef __test_msgs__msg__multi_nested__idl__
#define __test_msgs__msg__multi_nested__idl__


module test_msgs {

module msg {

module dds_ {

typedef test_msgs::msg::dds_::Arrays_ Arrays[3];

typedef test_msgs::msg::dds_::BoundedSequences_ BoundedSequencesArray[3];

typedef test_msgs::msg::dds_::UnboundedSequences_ UnBoundedSequencesArray[3];

typedef sequence<test_msgs::msg::dds_::Arrays_, 3> ArraysSeq3;

typedef sequence<test_msgs::msg::dds_::BoundedSequences_, 3> BoundedSeq3;

typedef sequence<test_msgs::msg::dds_::UnboundedSequences_, 3> UnboundedSeq3;

typedef sequence<test_msgs::msg::dds_::Arrays_> ArraysSeq;

typedef sequence<test_msgs::msg::dds_::BoundedSequences_> BoundedSeq;

typedef sequence<test_msgs::msg::dds_::UnboundedSequences_> UnboundedSeq;


struct MultiNested_ {
Arrays array_of_arrays_;

BoundedSequencesArray array_of_bounded_sequences_;

UnBoundedSequencesArray array_of_unbounded_sequences_;

ArraysSeq3 bounded_sequence_of_arrays_;

BoundedSeq3 bounded_sequence_of_bounded_sequences_;

UnboundedSeq3 bounded_sequence_of_unbounded_sequences_;

ArraysSeq unbounded_sequence_of_arrays_;

BoundedSeq unbounded_sequence_of_bounded_sequences_;

UnboundedSeq unbounded_sequence_of_unbounded_sequences_;


};


};  // module dds_

};  // module msg

};  // module test_msgs


#endif  // __test_msgs__msg__multi_nested__idl__
